{"version":3,"sources":["components/Catalog.js","contexts/AuthContext.js","components/Login.js","components/ProtectedRoute.js","components/CartDetail.js","App.js","reportWebVitals.js","index.js"],"names":["require","CatalogView","_ref","products","React","createElement","Catalog","data","contentKeys","imgKey","cardTitleKey","cardDescriptionKey","priceKey","skeleton","cardSize","btnOneText","btnTwoText","btnOneHandler","args","event","objectData","btnTwoHandler","row","imageClickHandler","cardControls","dataObj","className","placeholder","type","ProductList","_ref2","currentItems","setCurrentItems","useState","pageCount","setPageCount","itemOffset","setItemOffset","useEffect","endOffset","slice","Math","ceil","length","ReactPaginate","breakLabel","nextLabel","onPageChange","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","ProductData","props","setProducts","loading","setLoading","error","setError","async","axios","get","headers","err","message","fetchProducts","Container","Spinner","animation","Alert","variant","AuthContext","createContext","Login","username","setUsername","password","setPassword","login","useContext","useNavigate","onSubmit","e","preventDefault","fetch","method","body","JSON","stringify","then","res","json","access","alert","value","onChange","target","ProtectedRoute","children","isAuthenticated","user","Navigate","to","CartDetails","cart","setCart","response","fetchCartDetails","items","map","item","key","id","name","quantity","price","total","App","Router","Routes","Route","path","element","component","CartDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.cccf568a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Catalog from \"react-catalog-view\";\nimport ReactPaginate from 'react-paginate';\n\nimport axios from 'axios';\nimport { Container, Spinner, Alert } from 'react-bootstrap';\nimport './ProductList.css'\nconst $ = require('jquery')\nfunction CatalogView({ products }) {\n   const CONTENT_KEYS =\n   {\n      imgKey: \"image\",\n      cardTitleKey: \"name\",\n      cardDescriptionKey: \"description\",\n      priceKey: \"price\",\n   };\n   \n   return (\n      <Catalog\n         data={products}\n         // Array of JSON Objects (required)\n         contentKeys={CONTENT_KEYS}\n         // JSON Object defining the keys that will be \n         // used from the data array, keys should match. (required)\n         skeleton={0}\n         // Any non zero number will override default cards\n         // and will show that many skeleton cards.           \n         cardSize=\"sm\"\n         // Card sizes, sm, md and lg for small, medium  and large\n         btnOneText=\"View\"\n         // Enter text for action button one \n         // or pass empty string to hide.  \n         btnTwoText=\"Purchase Now\"\n         // Enter text for action button two \n         // or pass empty string to hide.\n         btnOneHandler={(args, event, objectData) => {\n            // 'objectData' returns object data from 'data' prop\n            // any arguments passed will be before 'event' \n            // and 'objectData'\n         }}\n         btnTwoHandler={(args, event, row) => {\n            // 'objectData' returns object data from 'data' prop\n            // any arguments passed will be before 'event' \n            // and 'objectData'\n         }}\n         imageClickHandler={(args, event, row) => {\n            // 'objectData' returns object data from 'data' prop\n            // any arguments passed will be before 'event' \n            // and 'objectData'\n         }}\n         cardControls={dataObj => {\n            return (\n               <div>\n                  <input className='my-custom-input' placeholder='custom-input' />\n                  <button className='my-custom-button' type='submit'> OK </button>\n               </div>\n            )\n         }\n            // Pass a function which returns JSX to be rendered inside card\n            // This function will have 'dataObj' containing JSON of\n            // the item each card represents\n         }\n      />\n   )\n}\n\nconst ProductList = ({ products }) => {\n   const itemsPerPage = 10;\n   const [currentItems, setCurrentItems] = useState([]);\n   const [pageCount, setPageCount] = useState(0);\n   const [itemOffset, setItemOffset] = useState(0);\n\n   React.useEffect(() => {\n      // Fetch products in the selected page\n      const endOffset = itemOffset + itemsPerPage;\n      setCurrentItems(products.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(products.length / itemsPerPage));\n      // eslint-disable-next-line\n   }, [itemOffset, itemsPerPage]);\n\n   const handlePageClick = (event) => {\n      const newOffset = (event.selected * itemsPerPage) % products.length;\n      setItemOffset(newOffset);\n   };\n\n   return (\n      <div>\n         <CatalogView products={currentItems} />\n         <ReactPaginate\n            breakLabel=\"...\"\n            nextLabel=\"next >\"\n            onPageChange={handlePageClick}\n            pageRangeDisplayed={5}\n            pageCount={pageCount}\n            previousLabel=\"< previous\"\n            renderOnZeroPageCount={null}\n            containerClassName=\"pagination\"\n            pageClassName=\"page-item\"\n            pageLinkClassName=\"page-link\"\n            previousClassName=\"page-item\"\n            previousLinkClassName=\"page-link\"\n            nextClassName=\"page-item\"\n            nextLinkClassName=\"page-link\"\n            breakClassName=\"page-item\"\n            breakLinkClassName=\"page-link\"\n            activeClassName=\"active\"\n         />\n      </div>\n   );\n};\n\nfunction ProductData(props) {\n   const [products, setProducts] = useState([]);\n   const [loading, setLoading] = useState(true);\n   const [error, setError] = useState(null);\n   useEffect(() => {\n\n      const fetchProducts = async () => {\n         try {\n            \n            const response = await axios.get('https://humane-blindly-gazelle.ngrok-free.app/api/products/',{headers:{\"ngrok-skip-browser-warning\":'Bearer'}});\n            let data = response.data\n            setProducts(data);\n            setLoading(false);\n         } catch (err) {\n            setError(err.message);\n            setLoading(false);\n         }\n      };\n\n      fetchProducts();\n   }, []);\n\n   if (loading) {\n      return (\n         <Container className=\"d-flex justify-content-center mt-5\">\n            <Spinner animation=\"border\" />\n         </Container>\n      );\n   }\n\n   if (error) {\n      return (\n         <Container className=\"d-flex justify-content-center mt-5\">\n            <Alert variant=\"danger\">{error}</Alert>\n         </Container>\n      );\n   }\n   return (\n      <ProductList products={products} />\n   )\n}\n\nexport default ProductData;\n","\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const history = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Validate token with backend and set user\n      fetch('http://localhost:8000/api/token/verify/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ token }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.code !== 'token_not_valid') {\n            setUser({ token });\n          } else {\n            localStorage.removeItem('token');\n          }\n        });\n    }\n  }, []);\n\n  const login = (token) => {\n    localStorage.setItem('token', token);\n    setUser({ token });\n    history.push('/');\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    history.push('/login');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","// src/components/Login.js\nimport React, { useState, useContext } from 'react';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const { login } = useContext(AuthContext);\n  const history = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch('http://localhost:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.access) {\n          login(data.access);\n        } else {\n          alert('Login failed');\n        }\n      });\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","\nimport React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\n\nconst ProtectedRoute = ({ children, isAuthenticated}) => {\n  const { user } = useContext(AuthContext);\n\n  return isAuthenticated ? children : <Navigate to=\"/login\" />\n};\n\nexport default ProtectedRoute;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst CartDetails = () => {\n  const [cart, setCart] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCartDetails = async () => {\n      try {\n        const response = await axios.get('/api/cart/');\n        setCart(response.data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCartDetails();\n  }, []);\n\n  if (loading) {\n    return <p>Loading cart details...</p>;\n  }\n\n  if (error) {\n    return <p>Error loading cart details: {error.message}</p>;\n  }\n\n  return (\n    <div>\n      <h2>Your Cart</h2>\n      {cart.items.length === 0 ? (\n        <p>Your cart is empty</p>\n      ) : (\n        <ul>\n          {cart.items.map((item) => (\n            <li key={item.id}>\n              {item.name} - {item.quantity} x ${item.price}\n            </li>\n          ))}\n        </ul>\n      )}\n      <p>Total: ${cart.total}</p>\n    </div>\n  );\n};\n\nexport default CartDetails;\n","\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport ProductData from './components/Catalog';\nimport Login from './components/Login';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport CartDetail from './components/CartDetail';\n\nfunction App() {\n  return (\n      <Router>\n          <Routes>\n            <Route path=\"/login\" element={Login} />\n\t\t\t<Route path=\"/cart\" element={<ProtectedRoute path=\"/cart\" component={CartDetail} />}/>\n            <Route path=\"/\" element={<ProductData/>} />\n          </Routes>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}